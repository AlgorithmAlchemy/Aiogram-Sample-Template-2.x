import logging

from aiogram import types
from aiogram.types import ParseMode

from data.config import config
from keyboards.inline.keyboards import UtilityKeyboards
from loader import dp

logger = logging.getLogger(__name__)


class FeedbackCommand:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /feedback"""

    @staticmethod
    async def handle(message: types.Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /feedback - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"""
        feedback_text = f"""
<b>üìù –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</b>

–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ –æ –±–æ—Ç–µ.

<b>–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤:</b>
1. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
2. –ú—ã –ø–æ–ª—É—á–∏–º –µ–≥–æ –∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º
3. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏

<b>–ß—Ç–æ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å:</b>
‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
‚Ä¢ –û–±—â–∏–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è
‚Ä¢ –ü–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> {config.bot.support}

<i>–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.</i>
"""

        await message.answer(
            feedback_text,
            parse_mode=ParseMode.HTML,
            reply_markup=UtilityKeyboards.get_back_keyboard()
        )


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
@dp.message_handler(commands=['feedback'], chat_type='private')
async def feedback_cmd(message: types.Message):
    await FeedbackCommand.handle(message)
