import logging

from aiogram import types
from aiogram.types import ParseMode

from data.config import config
from handlers.base_handler import BaseCommandHandler
from loader import dp
from models.user import User

logger = logging.getLogger(__name__)


class BanUserCommandHandler(BaseCommandHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ban_user"""

    def get_command(self) -> str:
        return "ban_user"

    async def handle(self, message: types.Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ban_user"""
        if message.from_user.id not in config.admin.owner_ids:
            await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        args = message.get_args().split()
        if not args:
            await message.answer(
                "‚ùå –£–∫–∞–∂–∏—Ç–µ ID –∏–ª–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\n"
                "–ü—Ä–∏–º–µ—Ä: /ban_user 123456789 –∏–ª–∏ /ban_user @username"
            )
            return

        target = args[0]
        reason = " ".join(args[1:]) if len(args) > 1 else "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"

        try:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if target.startswith('@'):
                # –ü–æ username
                username = target[1:]
                user = User.get_or_none(User.username == username)
                if not user:
                    await message.answer(
                        f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!"
                    )
                    return
                user_id = user.user_id
            else:
                # –ü–æ ID
                try:
                    user_id = int(target)
                except ValueError:
                    await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
                    return

                user = User.get_or_none(User.user_id == user_id)
                if not user:
                    await message.answer(
                        f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!"
                    )
                    return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ—Ç—Å—è –ª–∏ –∞–¥–º–∏–Ω –∑–∞–±–∞–Ω–∏—Ç—å —Å–∞–º —Å–µ–±—è
            if user_id == message.from_user.id:
                await message.answer("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å —Å–∞–º–∏ —Å–µ–±—è!")
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ—Ç—Å—è –ª–∏ –∞–¥–º–∏–Ω –∑–∞–±–∞–Ω–∏—Ç—å –¥—Ä—É–≥–æ–≥–æ –∞–¥–º–∏–Ω–∞
            if user_id in config.admin.owner_ids:
                await message.answer(
                    "‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å –¥—Ä—É–≥–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!"
                )
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–∞–Ω–µ–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if user.is_banned:
                await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!")
                return

            # –ë–∞–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user.ban()

            # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
            logger.info(
                f"Admin {message.from_user.id} banned user {user_id} "
                f"for reason: {reason}"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            ban_text = f"""
<b>üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</b>

<b>ID:</b> <code>{user_id}</code>
<b>–ò–º—è:</b> {user.first_name}
<b>Username:</b> @{user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}
<b>–ü—Ä–∏—á–∏–Ω–∞:</b> {reason}
<b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</b> {message.from_user.first_name}

<i>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞</i>
"""

            await message.answer(
                ban_text,
                parse_mode=ParseMode.HTML
            )

        except Exception as e:
            logger.error(f"Error banning user: {e}")
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ö—ç–Ω–¥–ª–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
ban_user_handler = BanUserCommandHandler(dp)
